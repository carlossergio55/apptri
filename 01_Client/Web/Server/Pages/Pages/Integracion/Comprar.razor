@page "/comprar-public"
@layout PublicLayout
@using Infraestructura.Models.Integracion
@using MudBlazor
@inject NavigationManager Nav
@inject ISnackbar Snackbar
@using Infraestructura.Models.Clasificador
@using Microsoft.AspNetCore.Components
@using Syncfusion.Blazor.Grids
@using System.Globalization
@inherits MainBaseComponent

<link href="styles/Integracion/comprar-public.css" rel="stylesheet" />
<MudContainer MaxWidth="MaxWidth.Medium" Class="comp-public-contenedor mt-10">

    <MudPaper Elevation="3" Class="comp-public-formulario p-6 rounded-xl">

        <!-- Título centrado y botón limpiar a la izquierda -->
        <MudGrid Class="mb-6">
            <MudItem xs="12" md="6">
                <MudButton Variant="Variant.Text"
                           Size="Size.Small"
                           StartIcon="@Icons.Material.Filled.Clear"
                           OnClick="LimpiarCampos"
                           Class="comp-public-limpiar-boton">
                    Limpiar
                </MudButton>
            </MudItem>
            <MudItem xs="12" md="6" Class="d-flex justify-center">
                <MudText Typo="Typo.h4" Class="comp-public-titulo">
                    BUSCAR SALIDAS
                </MudText>
            </MudItem>
        </MudGrid>

        <!-- Primera fila: origen y destino -->
        <MudGrid Class="mb-4">
            <MudItem xs="12" md="12">
                <MudText Class="comp-public-etiqueta">Seleccione ciudad de origen</MudText>
                <MudSelect T="int"
                           Label="Ruta"
                           @bind-Value="_rutaSeleccionadaId"
                           Variant="Variant.Outlined"
                           Margin="Margin.Dense">
                    @foreach (var ruta in _listaRutas ?? Enumerable.Empty<RutaDto>())
                    {
                        <MudSelectItem Value="@ruta.IdRuta">
                            @ruta.Origen → @ruta.Destino (@ruta.Duracion)
                        </MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
        </MudGrid>

        <!-- Segunda fila: fecha y pasajeros -->
        <MudGrid Class="mb-6">
            <MudItem xs="12" md="6">
                <MudText Class="comp-public-etiqueta">Seleccione fecha de salida</MudText>
                <MudDatePicker @bind-Date="FechaSalida"
                               Variant="Variant.Outlined"
                               Dense="true"
                               Class="comp-public-campo" />
            </MudItem>

            <MudItem xs="12" md="6">
                <MudText Class="comp-public-etiqueta">Número de pasajeros</MudText>
                <MudNumericField @bind-Value="CantidadPasajeros"
                                 Min="1"
                                 Max="10"
                                 Variant="Variant.Outlined"
                                 Dense="true"
                                 Class="comp-public-campo" />
            </MudItem>
        </MudGrid>

        <!-- Botones centrados -->
        <MudStack Direction="Row" Justify="Justify.Center" AlignItems="AlignItems.Center" Spacing="2">
            <MudButton Variant="Variant.Filled"
                       OnClick="BuscarPasajes"
                       Class="comp-public-boton-buscar"
                       EndIcon="@Icons.Material.Filled.Search">
                Buscar
            </MudButton>
        </MudStack>

    </MudPaper>
</MudContainer>


@code {
    private List<string> Rutas = new() { "Sucre", "Serrano", "Tomina", "Mendoza" };

    private string OrigenSeleccionado;
    private string DestinoSeleccionado;
    private DateTime? FechaSalida = DateTime.Today;
    private int CantidadPasajeros = 1;

    void BuscarPasajes()
    {
        if (string.IsNullOrWhiteSpace(OrigenSeleccionado) || string.IsNullOrWhiteSpace(DestinoSeleccionado))
        {
            Snackbar.Add("Seleccione ciudad de origen y destino.", Severity.Warning);
            return;
        }

        Nav.NavigateTo($"/resultados?origen={OrigenSeleccionado}&destino={DestinoSeleccionado}&fecha={FechaSalida:yyyy-MM-dd}&pasajeros={CantidadPasajeros}");
    }

    void LimpiarCampos()
    {
        OrigenSeleccionado = null;
        DestinoSeleccionado = null;
        FechaSalida = DateTime.Today;
        CantidadPasajeros = 1;
    }
}
